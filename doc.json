{"(metadata)":{"source":["meta"],"authors":[{"name":"trans","email":"transfire@gmail.com"}],"copyrights":[],"requirements":[{"name":"rdoc","version":"3+"},{"name":"qed","groups":["test"],"development":true},{"name":"ae","groups":["test"],"development":true},{"name":"detroit","groups":["build"],"development":true},{"name":"reap","groups":["build"],"development":true}],"dependencies":[],"alternatives":[],"conflicts":[],"repositories":[{"uri":"git://github.com/rubyworks/rdoc-shomen.git","scm":"git","name":"upstream"}],"resources":{"home":"http://rubyworks.github.com/rdoc-shomen","docs":"http://rubydoc.info/gems/rdoc-shoment","code":"http://github.com/rubyworks/rdoc-shomen","bugs":"http://github.com/rubyworks/rdoc-shomen/issues","mail":"http://groups.google.com/groups/rubyworks-mailinglist"},"extra":{},"load_path":["lib"],"revision":0,"created":"2010-07-01","summary":"RDoc Generator for Shomen Documentation Format","title":"RDoc Shomen","version":"0.1.0","name":"rdoc-shomen","description":"RDoc-Shomen is an RDoc generator plugin that can be used to generate Shomen\ndocumentation. This is an alternative to the shomen command line tool which\nuse the `.rdoc` cache to generate a shomen document. In contrast the rdoc-shomen\ngenerator operates as a traditional rdoc plugin.","organization":"rubyworks","date":"2012-03-31","path":"(metadata)","markup":"rdoc"},"RDoc::Generator::Shomen::DESCRIPTION":{"!":"constant","path":"RDoc::Generator::Shomen::DESCRIPTION","name":"DESCRIPTION","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","value":"'Shomen documentation format'","files":["/lib/rdoc/generator/shomen.rb"]},"RDoc":{"!":"module","path":"RDoc","name":"RDoc","namespace":"","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":["RDoc::SourceCodeAccess","RDoc::Generator"],"classes":["RDoc::Options","RDoc::TopLevel","RDoc::ClassModule","RDoc::AnyMethod","RDoc::Attr"],"methods":[],"accessors":[],"files":[]},"RDoc::AnyMethod":{"!":"class","path":"RDoc::AnyMethod","name":"AnyMethod","namespace":"RDoc","includes":["RDoc::SourceCodeAccess"],"extensions":[],"comment":"#<RDoc::Comment:0x00000002e56120>","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":[],"accessors":[],"files":["/lib/rdoc/generator/shomen_extensions.rb"],"superclass":"Object"},"RDoc::Attr":{"!":"class","path":"RDoc::Attr","name":"Attr","namespace":"RDoc","includes":["RDoc::SourceCodeAccess"],"extensions":[],"comment":"#<RDoc::Comment:0x00000002dd7898>","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":[],"accessors":[],"files":["/lib/rdoc/generator/shomen_extensions.rb"],"superclass":"Object"},"RDoc::ClassModule":{"!":"class","path":"RDoc::ClassModule","name":"ClassModule","namespace":"RDoc","includes":[],"extensions":[],"comment":"#<RDoc::Comment:0x00000002fb7168>","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["RDoc::ClassModule#with_documentation?","RDoc::ClassModule#document_self_or_methods"],"accessors":[],"files":["/lib/rdoc/generator/shomen_extensions.rb"],"superclass":"Object"},"RDoc::Generator":{"!":"module","path":"RDoc::Generator","name":"Generator","namespace":"RDoc","includes":[],"extensions":[],"comment":"","format":"rdoc","constants":[],"modules":[],"classes":["RDoc::Generator::Shomen"],"methods":[],"accessors":[],"files":[]},"RDoc::Generator::Shomen":{"!":"class","path":"RDoc::Generator::Shomen","name":"Shomen","namespace":"RDoc::Generator","includes":[],"extensions":[],"comment":"#<RDoc::Comment:0x00000002a01d40>","format":"rdoc","constants":["RDoc::Generator::Shomen::DESCRIPTION"],"modules":[],"classes":[],"methods":["RDoc::Generator::Shomen.for","RDoc::Generator::Shomen.setup_options","RDoc::Generator::Shomen#classes","RDoc::Generator::Shomen#classes_toplevel","RDoc::Generator::Shomen#files","RDoc::Generator::Shomen#files_toplevel","RDoc::Generator::Shomen#files_hash","RDoc::Generator::Shomen#methods_all","RDoc::Generator::Shomen#attributes_all","RDoc::Generator::Shomen#constants_all","RDoc::Generator::Shomen#class_dir","RDoc::Generator::Shomen#file_dir","RDoc::Generator::Shomen#shomen","RDoc::Generator::Shomen#generate","RDoc::Generator::Shomen#output_file","RDoc::Generator::Shomen.new","RDoc::Generator::Shomen#path_output_relative","RDoc::Generator::Shomen#project_metadata","RDoc::Generator::Shomen#generate_metadata","RDoc::Generator::Shomen#generate_constants","RDoc::Generator::Shomen#generate_classes","RDoc::Generator::Shomen#generate_methods","RDoc::Generator::Shomen#generate_documents","RDoc::Generator::Shomen#generate_scripts","RDoc::Generator::Shomen#complete_name","RDoc::Generator::Shomen#collect_methods","RDoc::Generator::Shomen#collect_attributes","RDoc::Generator::Shomen#method_name","RDoc::Generator::Shomen#mime_type","RDoc::Generator::Shomen#debug_msg"],"accessors":["RDoc::Generator::Shomen#options","RDoc::Generator::Shomen#path_base","RDoc::Generator::Shomen#path_output"],"files":["/lib/rdoc/generator/shomen.rb"],"superclass":"Object"},"RDoc::Options":{"!":"class","path":"RDoc::Options","name":"Options","namespace":"RDoc","includes":[],"extensions":[],"comment":"#<RDoc::Comment:0x000000030d3600>","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":[],"accessors":["RDoc::Options#source","RDoc::Options#yaml"],"files":["/lib/rdoc/generator/shomen_extensions.rb"],"superclass":"Object"},"RDoc::SourceCodeAccess":{"!":"module","path":"RDoc::SourceCodeAccess","name":"SourceCodeAccess","namespace":"RDoc","includes":[],"extensions":[],"comment":"#<RDoc::Comment:0x00000002f26a78>","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["RDoc::SourceCodeAccess#source_code_raw","RDoc::SourceCodeAccess#source_code_location"],"accessors":[],"files":["/lib/rdoc/generator/shomen_extensions.rb"]},"RDoc::TopLevel":{"!":"class","path":"RDoc::TopLevel","name":"TopLevel","namespace":"RDoc","includes":[],"extensions":[],"comment":"#<RDoc::Comment:0x00000003066c30>","format":"rdoc","constants":[],"modules":[],"classes":[],"methods":["RDoc::TopLevel#to_h"],"accessors":[],"files":["/lib/rdoc/generator/shomen_extensions.rb"],"superclass":"Object"},"RDoc::Generator::Shomen.for":{"!":"method","declarations":["class","public"],"path":"RDoc::Generator::Shomen.for","name":"for","namespace":"RDoc::Generator::Shomen","comment":"Standard generator factory method.\n\noptions - Generator options.\n\nReturns new RDoc::Generator::Shomen instance.","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"for(options)","arguments":[{"name":"options"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":36,"source":"# File lib/rdoc/generator/shomen.rb, line 36\n  def self.for(options)\n    new(options)\n  end","language":"ruby"},"RDoc::Generator::Shomen.new":{"!":"method","declarations":["class","public"],"path":"RDoc::Generator::Shomen.new","name":"new","namespace":"RDoc::Generator::Shomen","comment":"Initialize new generator.\n\noptions - Generator options.\n\nReturns new RDoc::Generator::Shomen instance.","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"new(options)","arguments":[{"name":"options"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":192,"source":"# File lib/rdoc/generator/shomen.rb, line 192\n  def initialize(options)\n    @options = options\n    #@options.diagram = false  # why?\n\n    @path_base   = Pathname.pwd.expand_path\n\n    # TODO: This is probably not needed any more.\n    @path_output = Pathname.new(@options.op_dir).expand_path(@path_base)\n  end","language":"ruby"},"RDoc::Generator::Shomen.setup_options":{"!":"method","declarations":["class","public"],"path":"RDoc::Generator::Shomen.setup_options","name":"setup_options","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":true,"interfaces":[{"signature":"setup_options(options)","arguments":[{"name":"options"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":44,"source":"# File lib/rdoc/generator/shomen.rb, line 44\n  def self.setup_options(options)\n    options.source = false\n    options.yaml   = false\n\n    opt = options.option_parser\n\n    opt.separator nil\n    opt.separator \"Shomen generator options:\"\n    opt.separator nil\n    opt.on(\"--yaml\", \"Generate YAML document instead of JSON.\") do |value|\n      options.yaml = true\n    end\n    opt.separator nil\n    opt.on(\"--source\", \"Include full source code for scripts.\") do |value|\n      options.github = true\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#attributes_all":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#attributes_all","name":"attributes_all","namespace":"RDoc::Generator::Shomen","comment":"List of all attributes in all classes and modules.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"attributes_all()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":105,"source":"# File lib/rdoc/generator/shomen.rb, line 105\n  def attributes_all\n    @attributes_all ||= classes.map{ |m| m.attributes }.flatten.sort\n  end","language":"ruby"},"RDoc::Generator::Shomen#class_dir":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#class_dir","name":"class_dir","namespace":"RDoc::Generator::Shomen","comment":"RDoc needs this to function.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"class_dir()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":120,"source":"# File lib/rdoc/generator/shomen.rb, line 120\n  def class_dir ; nil ; end","language":"ruby"},"RDoc::Generator::Shomen#classes":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#classes","name":"classes","namespace":"RDoc::Generator::Shomen","comment":"In the world of the RDoc Generators #classes is the same\nas #all_classes_and_modules. Well, except that its sorted \ntoo. For classes sans modules, see #types.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"classes()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":71,"source":"# File lib/rdoc/generator/shomen.rb, line 71\n  def classes\n    @classes ||= RDoc::TopLevel.all_classes_and_modules.sort\n  end","language":"ruby"},"RDoc::Generator::Shomen#classes_toplevel":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#classes_toplevel","name":"classes_toplevel","namespace":"RDoc::Generator::Shomen","comment":"Only toplevel classes and modules.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"classes_toplevel()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":76,"source":"# File lib/rdoc/generator/shomen.rb, line 76\n  def classes_toplevel\n    @classes_toplevel ||= classes.select {|klass| !(RDoc::ClassModule === klass.parent) }\n  end","language":"ruby"},"RDoc::Generator::Shomen#collect_attributes":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#collect_attributes","name":"collect_attributes","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"collect_attributes(class_module, singleton=false)","arguments":[{"name":"class_module"},{"name":"singleton","default":"false"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":532,"source":"# File lib/rdoc/generator/shomen.rb, line 532\n  def collect_attributes(class_module, singleton=false)\n    list = []\n    class_module.attributes.each do |a|\n      next if singleton ^ a.singleton\n      #p a.rw\n      #case a.rw\n      #when :write, 'W'\n      #  list << \"#{method_name(a)}=\"\n      #else\n        list << method_name(a)\n      #end\n    end\n    list.uniq\n  end","language":"ruby"},"RDoc::Generator::Shomen#collect_methods":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#collect_methods","name":"collect_methods","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"collect_methods(class_module, singleton=false)","arguments":[{"name":"class_module"},{"name":"singleton","default":"false"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":522,"source":"# File lib/rdoc/generator/shomen.rb, line 522\n  def collect_methods(class_module, singleton=false)\n    list = []\n    class_module.method_list.each do |m|\n      next if singleton ^ m.singleton\n      list << method_name(m)\n    end\n    list.uniq\n  end","language":"ruby"},"RDoc::Generator::Shomen#complete_name":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#complete_name","name":"complete_name","namespace":"RDoc::Generator::Shomen","comment":"Returns String of fully qualified name.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"complete_name(name, namespace)","arguments":[{"name":"name"},{"name":"namespace"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":513,"source":"# File lib/rdoc/generator/shomen.rb, line 513\n  def complete_name(name, namespace)\n    if name !~ %r^#{namespace}/\n      \"#{namespace}::#{name}\"\n    else\n      name\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#constants_all":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#constants_all","name":"constants_all","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"constants_all()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":110,"source":"# File lib/rdoc/generator/shomen.rb, line 110\n  def constants_all\n    @constants_all ||= classes.map{ |c| c.constants }.flatten\n  end","language":"ruby"},"RDoc::Generator::Shomen#debug_msg":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#debug_msg","name":"debug_msg","namespace":"RDoc::Generator::Shomen","comment":"Output progress information if rdoc debugging is enabled","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"debug_msg(msg)","arguments":[{"name":"msg"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":571,"source":"# File lib/rdoc/generator/shomen.rb, line 571\n  def debug_msg(msg)\n    return unless $DEBUG_RDOC\n    case msg[-1,1]\n      when '.' then tab = \"= \"\n      when ':' then tab = \"== \"\n      else          tab = \"* \"\n    end\n    $stderr.puts(tab + msg)\n  end","language":"ruby"},"RDoc::ClassModule#document_self_or_methods":{"!":"method","declarations":["instance","public"],"path":"RDoc::ClassModule#document_self_or_methods","name":"document_self_or_methods","namespace":"RDoc::ClassModule","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"document_self_or_methods()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen_extensions.rb","line":35,"source":"# File lib/rdoc/generator/shomen_extensions.rb, line 35\n  def document_self_or_methods\n    document_self || method_list.any?{ |m| m.document_self }\n  end","language":"ruby"},"RDoc::Generator::Shomen#file_dir":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#file_dir","name":"file_dir","namespace":"RDoc::Generator::Shomen","comment":"RDoc needs this to function.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"file_dir()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":123,"source":"# File lib/rdoc/generator/shomen.rb, line 123\n  def file_dir  ; nil ; end","language":"ruby"},"RDoc::Generator::Shomen#files":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#files","name":"files","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"files()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":81,"source":"# File lib/rdoc/generator/shomen.rb, line 81\n  def files\n    @files ||= (\n      @files_rdoc.select{ |f| f.parser != RDoc::Parser::Simple }\n    )\n  end","language":"ruby"},"RDoc::Generator::Shomen#files_hash":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#files_hash","name":"files_hash","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"files_hash()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":95,"source":"# File lib/rdoc/generator/shomen.rb, line 95\n  def files_hash\n    @files ||= RDoc::TopLevel.files_hash\n  end","language":"ruby"},"RDoc::Generator::Shomen#files_toplevel":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#files_toplevel","name":"files_toplevel","namespace":"RDoc::Generator::Shomen","comment":"List of toplevel files. RDoc supplies this via the #generate method.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"files_toplevel()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":88,"source":"# File lib/rdoc/generator/shomen.rb, line 88\n  def files_toplevel\n    @files_toplevel ||= (\n      @files_rdoc.select{ |f| f.parser == RDoc::Parser::Simple }\n    )\n  end","language":"ruby"},"RDoc::Generator::Shomen#generate":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#generate","name":"generate","namespace":"RDoc::Generator::Shomen","comment":"Build the initial indices and output objects based on an array of\ntop level objects containing the extracted information.\n\nfiles - Files to document.\n\nReturns nothing.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate(files)","arguments":[{"name":"files"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":136,"source":"# File lib/rdoc/generator/shomen.rb, line 136\n  def generate(files)\n    @files_rdoc = files.sort\n\n    @table = {}\n\n    generate_metadata\n    generate_constants\n    generate_classes\n    #generate_attributes\n    generate_methods\n    generate_documents\n    generate_scripts   # must be last b/c it depends on the others\n\n    # TODO: method accessor fields need to be handled\n\n    # THINK: Internal referencing model, YAML and JSYNC ?\n    #ref_table = reference_table(@table)\n\n    if options.yaml\n      out = @table.to_yaml\n    else\n      out = JSON.generate(@table)\n    end\n\n    if options.op_dir == '-'\n      puts out\n    else\n      File.open(output_file, 'w') do |f|\n        f << out\n      end unless $dryrun\n    end\n\n  #rescue StandardError => err\n  #  debug_msg \"%s: %s\\n  %s\" % [ err.class.name, err.message, err.backtrace.join(\"\\n  \") ]\n  #  raise err\n  end","language":"ruby"},"RDoc::Generator::Shomen#generate_classes":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#generate_classes","name":"generate_classes","namespace":"RDoc::Generator::Shomen","comment":"Add classes (and modules) to table.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate_classes()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":246,"source":"# File lib/rdoc/generator/shomen.rb, line 246\n  def generate_classes\n    debug_msg \"Generating class/module documentation:\"\n\n    classes.each do |rdoc_class|\n      debug_msg \"%s (%s)\" % [ rdoc_class.full_name, rdoc_class.path ]\n\n      if rdoc_class.type=='class'\n        model = Shomen::Model::Class.new\n      else\n        model = Shomen::Model::Module.new\n      end\n\n      model.path             = rdoc_class.full_name\n      model.name             = rdoc_class.name\n      model.namespace        = rdoc_class.full_name.split('::')[0...-1].join('::')\n      model.includes         = rdoc_class.includes.map{ |x| x.name }  # FIXME: How to \"lookup\" full name?\n      model.extensions       = []                                     # TODO:  How to get extensions?\n      model.comment          = rdoc_class.comment.to_s #text\n      model.format           = 'rdoc'\n      model.constants        = rdoc_class.constants.map{ |x| complete_name(x.name, rdoc_class.full_name) }\n      model.modules          = rdoc_class.modules.map{ |x| complete_name(x.name, rdoc_class.full_name) }\n      model.classes          = rdoc_class.classes.map{ |x| complete_name(x.name, rdoc_class.full_name) }\n      model.methods          = rdoc_class.method_list.map{ |m| method_name(m) }.uniq\n      model.accessors        = rdoc_class.attributes.map{ |a| method_name(a) }.uniq  #+ \":#{a.rw}\" }.uniq\n      model.files            = rdoc_class.in_files.map{ |x| \"/#{x.full_name}\" }\n\n      if rdoc_class.type == 'class'\n        # HACK: No idea why RDoc is returning some weird superclass:\n        #   <RDoc::NormalClass:0xd924d4 class Object < BasicObject includes: []\n        #     attributes: [] methods: [#<RDoc::AnyMethod:0xd92b8c Object#fileutils\n        #     (public)>] aliases: []>\n        # Maybe it has something to do with #fileutils?\n        model.superclass = (\n          case rdoc_class.superclass\n          when nil\n          when String\n            rdoc_class.superclass\n          else\n            rdoc_class.superclass.full_name\n          end\n        )\n      end\n\n      @table[model.path] = model.to_h\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#generate_constants":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#generate_constants","name":"generate_constants","namespace":"RDoc::Generator::Shomen","comment":"Add constants to table.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate_constants()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":228,"source":"# File lib/rdoc/generator/shomen.rb, line 228\n  def generate_constants\n    debug_msg \"Generating constant documentation:\"\n    constants_all.each do |rdoc|\n      model = Shomen::Model::Constant.new\n\n      model.path      = rdoc.parent.full_name + '::' + rdoc.name\n      model.name      = rdoc.name\n      model.namespace = rdoc.parent.full_name\n      model.comment   = rdoc.comment.text\n      model.format    = 'rdoc'\n      model.value     = rdoc.value\n      model.files     = [\"/#{rdoc.file.full_name}\"]\n\n      @table[model.path] = model.to_h\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#generate_documents":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#generate_documents","name":"generate_documents","namespace":"RDoc::Generator::Shomen","comment":"Generate entries for information files, e.g. `README.rdoc`.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate_documents()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":432,"source":"# File lib/rdoc/generator/shomen.rb, line 432\n  def generate_documents\n    files_toplevel.each do |rdoc_document|\n      absolute_path = File.join(path_base, rdoc_document.full_name)\n\n      model = Shomen::Model::Document.new\n\n      model.path     = rdoc_document.full_name\n      model.name     = File.basename(absolute_path)\n      model.created  = File.mtime(absolute_path)\n      model.modified = File.mtime(absolute_path)\n      model.text     = File.read(absolute_path) #file.comment\n      model.format   = mime_type(absolute_path)\n\n      @table['/'+model.path] = model.to_h\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#generate_metadata":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#generate_metadata","name":"generate_metadata","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate_metadata()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":223,"source":"# File lib/rdoc/generator/shomen.rb, line 223\n  def generate_metadata\n    @table['(metadata)'] = project_metadata.to_h\n  end","language":"ruby"},"RDoc::Generator::Shomen#generate_methods":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#generate_methods","name":"generate_methods","namespace":"RDoc::Generator::Shomen","comment":"Transform RDoc methods to Shomen model and add to table.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate_methods()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":296,"source":"# File lib/rdoc/generator/shomen.rb, line 296\n  def generate_methods\n    debug_msg \"Generating method documentation:\"\n\n    list = methods_all + attributes_all\n\n    list.each do |rdoc_method|\n      #debug_msg \"%s\" % [rdoc_method.full_name]\n\n      #full_name  = method_name(m)\n      #'prettyname'   => m.pretty_name,\n      #'type'         => m.type, # class or instance\n\n      model = Shomen::Model::Method.new\n\n      model.path        = method_name(rdoc_method)\n      model.name        = rdoc_method.name\n      model.namespace   = rdoc_method.parent_name\n      model.comment     = rdoc_method.comment.text\n      model.format      = 'rdoc'\n      model.aliases     = rdoc_method.aliases.map{ |a| method_name(a) }\n      model.alias_for   = method_name(rdoc_method.is_alias_for)\n      model.singleton   = rdoc_method.singleton\n\n      model.declarations << rdoc_method.type.to_s #singleton ? 'class' : 'instance'\n      model.declarations << rdoc_method.visibility.to_s\n\n      model.interfaces = []\n      if rdoc_method.call_seq\n        rdoc_method.call_seq.split(\"\\n\").each do |cs|\n          cs = cs.to_s.strip\n          model.interfaces << parse_interface(cs) unless cs == ''\n        end\n      end\n      model.interfaces << parse_interface(\"#{rdoc_method.name}#{rdoc_method.params}\")\n\n      model.returns    = []  # RDoc doesn't support specifying return values\n      model.file       = '/'+rdoc_method.source_code_location.first\n      model.line       = rdoc_method.source_code_location.last.to_i\n      model.source     = rdoc_method.source_code_raw\n\n      if rdoc_method.respond_to?(:c_function)\n        model.language = rdoc_method.c_function ? 'c' : 'ruby'\n      else\n        model.language = 'ruby'\n      end\n\n      @table[model.path] = model.to_h\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#generate_scripts":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#generate_scripts","name":"generate_scripts","namespace":"RDoc::Generator::Shomen","comment":"Generate script entries.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"generate_scripts()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":452,"source":"# File lib/rdoc/generator/shomen.rb, line 452\n  def generate_scripts\n    #debug_msg \"Generating file documentation in #{path_output_relative}:\"\n    #templatefile = self.path_template + 'file.rhtml'\n\n    files.each do |rdoc_file|\n      debug_msg \"%s\" % [rdoc_file.full_name]\n\n      absolute_path = File.join(path_base, rdoc_file.full_name)\n      #rel_prefix  = self.path_output.relative_path_from(outfile.dirname)\n\n      model = Shomen::Model::Script.new\n\n      model.path      = rdoc_file.full_name\n      model.name      = File.basename(rdoc_file.full_name)\n      model.created   = File.ctime(absolute_path)\n      model.modified  = File.mtime(absolute_path)\n\n      # http://github.com/rubyworks/qed/blob/master/ lib/qed.rb\n\n      # TODO: Add option to rdoc command line tool instead of using ENV.\n\n      if ENV['source']\n        model.source   = File.read(absolute_path) #file.comment\n        model.language = mime_type(absolute_path)\n      end\n\n      webcvs = options.webcvs || project_metadata['webcvs']\n      if webcvs\n        model.uri      = File.join(webcvs, model.path)  # TODO: use open-uri ?\n        model.language = mime_type(absolute_path)\n      end\n\n      #model.header   =\n      #model.footer   =\n      model.requires  = rdoc_file.requires.map{ |r| r.name }\n      model.constants = rdoc_file.constants.map{ |c| c.full_name }\n\n      # note that this utilizes the table we are building\n      # so it needs to be the last thing done.\n      @table.each do |k, h|\n        case h['!']\n        when 'module'\n          model.modules ||= []\n          model.modules << k if h['files'].include?(rdoc_file.full_name)\n        when 'class'\n          model.classes ||= []\n          model.classes << k if h['files'].include?(rdoc_file.full_name)\n        when 'method'\n          model.methods ||= []\n          model.methods << k if h['file'] == rdoc_file.full_name\n        when 'class-method'\n          model.class_methods ||= []\n          model.class_methods << k if h['file'] == rdoc_file.full_name\n        end\n      end\n\n      @table['/'+model.path] = model.to_h\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#method_name":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#method_name","name":"method_name","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"method_name(method)","arguments":[{"name":"method"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":548,"source":"# File lib/rdoc/generator/shomen.rb, line 548\n  def method_name(method)\n    return nil if method.nil?\n    if method.singleton\n      i = method.full_name.rindex('::')     \n      method.full_name[0...i] + '.' + method.full_name[i+2..-1]\n    else\n      method.full_name\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#methods_all":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#methods_all","name":"methods_all","namespace":"RDoc::Generator::Shomen","comment":"List of all methods in all classes and modules.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"methods_all()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":100,"source":"# File lib/rdoc/generator/shomen.rb, line 100\n  def methods_all\n    @methods_all ||= classes.map{ |m| m.method_list }.flatten.sort\n  end","language":"ruby"},"RDoc::Generator::Shomen#mime_type":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#mime_type","name":"mime_type","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"mime_type(path)","arguments":[{"name":"path"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":559,"source":"# File lib/rdoc/generator/shomen.rb, line 559\n  def mime_type(path)\n    case File.extname(path)\n    when '.rb', '.rbx' then 'text/ruby'\n    when '.c' then 'text/c-source'\n    when '.rdoc' then 'text/rdoc'\n    when '.md', '.markdown' then 'text/markdown'\n    else 'text/plain'\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#output_file":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#output_file","name":"output_file","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"output_file()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":174,"source":"# File lib/rdoc/generator/shomen.rb, line 174\n  def output_file\n    name = project_metadata['name']\n    vers = project_metadata['version']\n\n    if name && vers\n      \"#{name}-#{vers}.json\"\n    else\n     'doc.json'\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#path_output_relative":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#path_output_relative","name":"path_output_relative","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"path_output_relative(path=nil)","arguments":[{"name":"path","default":"nil"}]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":209,"source":"# File lib/rdoc/generator/shomen.rb, line 209\n  def path_output_relative(path=nil)\n    if path\n      path.to_s.sub(path_base.to_s+'/', '')\n    else\n      @path_output_relative ||= path_output.to_s.sub(path_base.to_s+'/', '')\n    end\n  end","language":"ruby"},"RDoc::Generator::Shomen#project_metadata":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#project_metadata","name":"project_metadata","namespace":"RDoc::Generator::Shomen","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"project_metadata()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":218,"source":"# File lib/rdoc/generator/shomen.rb, line 218\n  def project_metadata\n    @project_metadata ||= Shomen::Metadata.new\n  end","language":"ruby"},"RDoc::Generator::Shomen#shomen":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#shomen","name":"shomen","namespace":"RDoc::Generator::Shomen","comment":"TODO: Rename ?","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"shomen()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen.rb","line":126,"source":"# File lib/rdoc/generator/shomen.rb, line 126\n  def shomen\n    @table || {}\n  end","language":"ruby"},"RDoc::SourceCodeAccess#source_code_location":{"!":"method","declarations":["instance","public"],"path":"RDoc::SourceCodeAccess#source_code_location","name":"source_code_location","namespace":"RDoc::SourceCodeAccess","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"source_code_location()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen_extensions.rb","line":71,"source":"# File lib/rdoc/generator/shomen_extensions.rb, line 71\n  def source_code_location\n    src = source_code_raw\n    if md = %rFile (.*?), line (\\d+)/.match(src)\n      file = md[1]\n      line = md[2]\n    else\n      file = \"(unknown)\"\n      line = 0\n    end\n    return file, line\n  end","language":"ruby"},"RDoc::SourceCodeAccess#source_code_raw":{"!":"method","declarations":["instance","public"],"path":"RDoc::SourceCodeAccess#source_code_raw","name":"source_code_raw","namespace":"RDoc::SourceCodeAccess","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"source_code_raw()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen_extensions.rb","line":59,"source":"# File lib/rdoc/generator/shomen_extensions.rb, line 59\n  def source_code_raw\n    return '' unless @token_stream\n    src = \"\"\n    @token_stream.each do |t|\n      next unless t\n      src << t.text\n    end\n    #add_line_numbers(src)\n    src\n  end","language":"ruby"},"RDoc::TopLevel#to_h":{"!":"method","declarations":["instance","public"],"path":"RDoc::TopLevel#to_h","name":"to_h","namespace":"RDoc::TopLevel","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"to_h()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen_extensions.rb","line":10,"source":"# File lib/rdoc/generator/shomen_extensions.rb, line 10\n  def to_h\n    {\n       :path     => path,\n       :name     => base_name,\n       :fullname => full_name,\n       :rootname => absolute_name,\n       :modified => last_modified,\n       :diagram  => diagram\n    }\n  end","language":"ruby"},"RDoc::ClassModule#with_documentation?":{"!":"method","declarations":["instance","public"],"path":"RDoc::ClassModule#with_documentation?","name":"with_documentation?","namespace":"RDoc::ClassModule","comment":"","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"with_documentation?()","arguments":[]}],"returns":[],"file":"/lib/rdoc/generator/shomen_extensions.rb","line":30,"source":"# File lib/rdoc/generator/shomen_extensions.rb, line 30\n  def with_documentation?\n    document_self_or_methods || classes_and_modules.any?{ |c| c.with_documentation? }\n  end","language":"ruby"},"RDoc::Generator::Shomen#options":{"!":"method","declarations":["instance","public"],"path":"RDoc::Generator::Shomen#options","name":"options","namespace":"RDoc::Generator::Shomen","comment":"User options from the command line.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"options","arguments":[{"name":"options"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"RDoc::Generator::Shomen#path_base":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#path_base","name":"path_base","namespace":"RDoc::Generator::Shomen","comment":"Current pathname.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"path_base","arguments":[{"name":"path_base"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"RDoc::Generator::Shomen#path_output":{"!":"method","declarations":["instance","protected"],"path":"RDoc::Generator::Shomen#path_output","name":"path_output","namespace":"RDoc::Generator::Shomen","comment":"The output path.","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"path_output","arguments":[{"name":"path_output"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"RDoc::Options#source":{"!":"method","declarations":["instance","public"],"path":"RDoc::Options#source","name":"source","namespace":"RDoc::Options","comment":"true/false to include full source","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"source","arguments":[{"name":"source"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"RDoc::Options#yaml":{"!":"method","declarations":["instance","public"],"path":"RDoc::Options#yaml","name":"yaml","namespace":"RDoc::Options","comment":"true/false to use YAML instead of JSON","format":"rdoc","aliases":[],"alias_for":null,"singleton":false,"interfaces":[{"signature":"yaml","arguments":[{"name":"yaml"}]}],"returns":[],"file":"/(unknown)","line":0,"source":"","language":"ruby"},"/lib/rdoc/discover.rb":{"!":"script","path":"lib/rdoc/discover.rb","name":"discover.rb","created":"2012-03-31 09:43:25 -0400","modified":"2012-03-31 09:43:25 -0400","requires":["rubygems"],"constants":[],"modules":[],"classes":[],"methods":[]},"/lib/rdoc/generator/shomen.rb":{"!":"script","path":"lib/rdoc/generator/shomen.rb","name":"shomen.rb","created":"2012-03-31 11:17:02 -0400","modified":"2012-03-31 11:17:02 -0400","requires":["fileutils","pathname","yaml","json","rdoc/rdoc","rdoc/generator","rdoc/generator/markup","shomen/metadata","shomen/model","rdoc/generator/shomen_extensions"],"constants":[],"modules":[],"classes":[],"methods":[]},"/lib/rdoc/generator/shomen_extensions.rb":{"!":"script","path":"lib/rdoc/generator/shomen_extensions.rb","name":"shomen_extensions.rb","created":"2012-03-31 10:50:09 -0400","modified":"2012-03-31 10:50:09 -0400","requires":[],"constants":[],"modules":[],"classes":[],"methods":[]}}